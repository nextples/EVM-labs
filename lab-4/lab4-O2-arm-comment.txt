swap:
        ldr     w3, [x1]
        ldr     w2, [x0]
        str     w3, [x0]
        str     w2, [x1]
        ret
FillArray:
        stp     x29, x30, [sp, -64]!		//записываем x29 в стек по адресу sp; x30 по адресу sp-64
        mov     x1, 4				//записываем 4 в регистр x1
        mov     x29, sp				//записываем sp в регистр x29
        stp     x19, x20, [sp, 16]		//записываем x19 по адресу sp, x20 по адресу sp+16
        mov     x20, x0				//записываем 140000 в регистр x20
        bl      calloc				
        mov     x19, x0				//записываем &array в регистр x19 
        cmp     x20, 0				
        ble     .L3				//переход если n <= 0
        stp     x21, x22, [sp, 32] 		//записываем x21 по адресу sp, x22 по адресу sp+32
        mov     w22, 19923				
        movk    w22, 0x1062, lsl 16		
        mov     w21, 1000
        str     x23, [sp, 48]
        mov     x23, 0				//записываем 0 в x23(i)
.L5:
        bl      rand
        smull   x1, w0, w22
        asr     x1, x1, 38
        sub     w1, w1, w0, asr 31		//w1 = w1 - (w0 asr 31)
        msub    w0, w1, w21, w0			//w0 = w0 - w1 * w21
        str     w0, [x19, x23, lsl 2]		//записываем w0 по адресу x19 + (x23 << 2) (записываем rand() % 1000 в array[i])
        add     x23, x23, 1			//i++
        cmp     x20, x23			//i != 140000
        bne     .L5				
        ldp     x21, x22, [sp, 32]		//записываем [sp+32] в x21, [sp+32+8(размер регистра)] в x22
        ldr     x23, [sp, 48]			
.L3:
        mov     x0, x19				//записываем &array в регистр x0
        ldp     x19, x20, [sp, 16]
        ldp     x29, x30, [sp], 64
        ret
main:
        stp     x29, x30, [sp, -16]! 		//записываем x29 по адресу sp; записываем x30 по адресу sp-16
        mov     x0, 8928			//записываем 8928 в регистр x0
        movk    x0, 0x2, lsl 16			//записываем число 0x2 в 16-32 биты регистра x0
        mov     x29, sp				//записываем sp в регистр x29
        bl      FillArray			//вызываем FillArray; записываем в x30 адрес возврата (следующая строка)
        add     x3, x0, 557056			//записываем &array+557056 в регистр x3
        mov     w4, 8928			//записываем 8928 в регистр w4
        mov     x5, x0				//записываем &array в регистр x5
        add     x3, x3, 2940			//записываем &array + (140000 - 1)*4
        movk    w4, 0x2, lsl 16			//записываем 140000 в регистр w4
.L9:
        mov     x0, x5				//записываем &array в регистр x0
.L11:
        ldp     w1, w2, [x0]			//записываем array[j] в регистр w1, array[j+1] в регистр w2
        cmp     w1, w2
        ble     .L10				//переход если array[j] <= array[j+1]
        stp     w2, w1, [x0]			//swap(array[j], array[j+1])
.L10:
        add     x0, x0, 4			//&array += 4
        cmp     x0, x3				//проверка не вышли ли за границы массива
        bne     .L11				//переход если не вышли
        subs    w4, w4, #1			//140000 -= 1 + установка флагов
        bne     .L9
        mov     w0, 0
        ldp     x29, x30, [sp], 16		//записываем sp+16 в x29 и x30 
        ret